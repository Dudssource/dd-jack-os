function Screen.init 2
push constant 1
pop static 0
push constant 1
pop local 0
push constant 0
pop local 1
push constant 16
call Array.new 1
pop static 1
label WHILE_EXP0
push local 1
push constant 16
lt
not
if-goto WHILE_END0
push local 1
push static 1
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 2
call Math.multiply 2
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8192
eq
not
not
if-goto WHILE_END0
push constant 16384
push local 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 4
push argument 0
push constant 16
call Math.divide 2
pop local 3
push constant 16384
push constant 32
push argument 1
call Math.multiply 2
push local 3
add
add
pop local 0
push local 0
call Memory.peek 1
pop local 1
push argument 0
push constant 16
push local 3
call Math.multiply 2
sub
pop local 2
push static 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 2
push static 1
add
pop pointer 1
push that 0
or
pop local 1
goto IF_END0
label IF_FALSE0
push local 1
push local 2
push static 1
add
pop pointer 1
push that 0
not
and
pop local 1
label IF_END0
push local 0
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 13
push constant 0
pop local 11
push constant 0
pop local 12
push constant 0
pop local 9
push constant 0
pop local 10
push constant 0
pop local 7
push constant 0
pop local 8
push argument 0
push argument 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 12
label IF_FALSE0
push argument 1
push argument 3
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 11
label IF_FALSE1
push argument 0
pop local 2
push argument 1
pop local 3
push argument 2
push argument 0
sub
pop local 4
push argument 3
push argument 1
sub
pop local 5
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 6
push argument 0
push argument 2
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push argument 2
sub
pop local 4
push constant 1
pop local 8
label IF_FALSE2
push argument 1
push argument 3
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 1
push argument 3
sub
pop local 5
push constant 1
pop local 7
label IF_FALSE3
label WHILE_EXP0
push local 0
push local 4
lt
push local 0
push local 4
eq
or
push local 1
push local 5
lt
push local 1
push local 5
eq
or
and
not
if-goto WHILE_END0
push local 2
push local 0
add
pop local 9
push local 3
push local 1
add
pop local 10
push local 7
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 3
push local 1
sub
pop local 10
label IF_FALSE4
push local 8
push constant 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 2
push local 0
sub
pop local 9
label IF_FALSE5
push local 9
push local 10
call Screen.drawPixel 2
pop temp 0
push local 12
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 1
push constant 1
add
pop local 1
label IF_FALSE6
push local 11
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
push constant 1
add
pop local 0
label IF_FALSE7
push local 11
push local 12
or
not
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 6
push constant 0
lt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 0
push constant 1
add
pop local 0
push local 6
push local 5
add
pop local 6
goto IF_END9
label IF_FALSE9
push local 1
push constant 1
add
pop local 1
push local 6
push local 4
sub
pop local 6
label IF_END9
label IF_FALSE8
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawRectangle 1
push argument 1
pop local 0
label WHILE_EXP0
push local 0
push argument 3
lt
push local 0
push argument 3
eq
or
not
if-goto WHILE_END0
push argument 0
push local 0
push argument 2
push local 0
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 3
push argument 2
neg
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
push argument 2
push constant 181
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 13
call Sys.error 1
pop temp 0
push constant 0
return
label IF_FALSE0
label WHILE_EXP0
push local 0
push argument 2
eq
not
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
pop local 1
push argument 1
push local 0
add
pop local 2
push argument 0
push local 1
sub
push local 2
push argument 0
push local 1
add
push local 2
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
